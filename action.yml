name: 'Gradle Dependency Diff Report'
description: 'A GitHub Action that reports Gradle dependency differences.'
author: 'YUMEMI Inc.'
branding:
  icon: 'git-pull-request'
  color: 'blue'
inputs:
  modules:
    description: ''
    required: true
  configuration:
    description: ''
    required: false
  project-dir:
    description: ''
    required: false
    default: '.'
  report-title:
    description: ''
    required: false
    default: 'Report from [Gradle Dependency Diff Report](https://github.com/yumemi-inc/gradle-dependency-diff-report) action'
  repository: # for .github/workflows/ci.yml
    description: ''
    required: false
    default: ${{ github.repository }}
  before-sha: # for .github/workflows/ci.yml
    description: ''
    required: false
    default: ${{ github.event.before }}
  after-sha: # for .github/workflows/ci.yml
    description: ''
    required: false
    default: ${{ github.event.after }}
outputs:
  exists-diff:
    description: ''
    value: ${{ steps.report.outputs.exists-diff || 'false' }}
runs:
  using: 'composite'
  steps:
    - name: Check and report differences
      id: report
      shell: bash
      env:
        REPOSITORY: ${{ inputs.repository }}
        GH_TOKEN: ${{ github.token }}
        EVENT_NAME: ${{ github.event_name }}
        BEFORE_SHA: ${{ inputs.before-sha }}
        AFTER_SHA: ${{ inputs.after-sha }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        MODULES: ${{ inputs.modules }}
        CONFIGURATION: ${{ inputs.configuration }}
        PROJECT_DIR: ${{ inputs.project-dir }}
        REPORT_TITLE: ${{ inputs.report-title }}
      run: |
        if [[ "$EVENT_NAME" != 'pull_request' && "$EVENT_NAME" != 'push' ]]; then
          echo "::error::This action must be triggered by a 'pull_request' or 'push' event."
          exit 1
        fi

        if [[ -z "$MODULES" ]]; then
          echo "::error::Specify 'modules' input."
          exit 1
        fi

        modules=()
        configurations=()

        for module in $MODULES ; do
          configuration="$CONFIGURATION"

          if [[ "$module" =~ '|' ]]; then
            configuration=${module#*|}
            module=${module%%|*}
          fi

          if [[ -z "$module" || -z "$configuration" ]]; then
            echo "::error::Incorrect 'modules' or 'configuration' input."
            exit 1
          fi

          modules+=($module)
          configurations+=($configuration)
        done

        cd "$GITHUB_ACTION_PATH"

        readonly WORK_DIR="$(pwd)"

        mkdir tools
        mkdir deps

        curl -f -L -o "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" 'https://github.com/careem/dependency-diff-tldr/releases/download/v0.0.6/dependency-diff-tldr-r8.jar'

        if [ 'b76af4e71fe1bc3362207d648542337c21ab91e8' != "$(shasum "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" | awk '{print $1}')" ]; then
          echo '::error::Incorrect checksum for dependency-diff-tldr-r8.jar.'
          exit 1
        fi

        curl -f -L -o "$WORK_DIR/tools/dependency-tree-diff.jar" 'https://github.com/JakeWharton/dependency-tree-diff/releases/download/1.2.0/dependency-tree-diff.jar'

        if [ '949394274f37c06ac695b5d49860513e4d16e847' != "$(shasum "$WORK_DIR/tools/dependency-tree-diff.jar" | awk '{print $1}')" ]; then
          echo '::error::Incorrect checksum for dependency-tree-diff.jar.'
          exit 1
        fi

        gh repo clone "$REPOSITORY" sources > /dev/null 2>&1 || { echo "::error::May not have 'contents: read' permission."; exit 1; }

        cd "./sources/$PROJECT_DIR"

        if [[ "$EVENT_NAME" == 'push' ]]; then
          before_sha="$BEFORE_SHA"
        else
          git checkout -q "$(gh pr view "$PR_NUMBER" --json commits --jq '.commits.[0].oid')" > /dev/null 2>&1 || { echo "::error::May not have 'pull-requests: read' permission."; exit 1; }
          before_sha="$(git rev-parse HEAD~1)"
        fi

        after_sha="$AFTER_SHA"

        git checkout -q "$before_sha" > /dev/null 2>&1 || { echo '::debug::Unable to check out before SHA.'; exit 1; }

        for i in "${!modules[@]}" ; do
          ./gradlew ":${modules[$i]}:dependencies" --configuration "${configurations[$i]}" > "$WORK_DIR/deps/${modules[$i]}-before-deps.txt"
        done

        git checkout -q "$after_sha" > /dev/null 2>&1 || { echo '::debug::Unable to check out after SHA.'; exit 1; }

        for i in "${!modules[@]}" ; do
          ./gradlew ":${modules[$i]}:dependencies" --configuration "${configurations[$i]}" > "$WORK_DIR/deps/${modules[$i]}-after-deps.txt"
        done

        echo "### $REPORT_TITLE" >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        echo "- bofore commit SHA: \`${before_sha}\`" >> $GITHUB_STEP_SUMMARY
        echo "- after commit SHA: \`${after_sha}\`" >> $GITHUB_STEP_SUMMARY

        for i in "${!modules[@]}" ; do
          result="$(java -jar "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" "$WORK_DIR/deps/${modules[$i]}-before-deps.txt" "$WORK_DIR/deps/${modules[$i]}-after-deps.txt")"

          echo '' >> $GITHUB_STEP_SUMMARY

          if [ -n "$result" ]; then
            echo ":orange_square: \`${modules[$i]}\` module ( \`${configurations[$i]}\` configuration )" >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$result" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY

            result_detail="$(java -jar "$WORK_DIR/tools/dependency-tree-diff.jar" "$WORK_DIR/deps/${modules[$i]}-before-deps.txt" "$WORK_DIR/deps/${modules[$i]}-after-deps.txt")"

            echo '' >> $GITHUB_STEP_SUMMARY
            echo '<details>' >> $GITHUB_STEP_SUMMARY
            echo '<summary>detail</summary>' >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY
            echo '```diff' >> $GITHUB_STEP_SUMMARY
            echo "$result_detail" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo '</details>' >> $GITHUB_STEP_SUMMARY

            echo 'exists-diff=true' >> $GITHUB_OUTPUT
          else
            echo ":green_square: \`${modules[$i]}\` module ( \`${configurations[$i]}\` configuration )" >> $GITHUB_STEP_SUMMARY
            echo '' >> $GITHUB_STEP_SUMMARY
            echo 'No difference in dependencies, when this module is checked as a base point.' >> $GITHUB_STEP_SUMMARY
          fi
        done
